<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.faizsiegeln</groupId>
    <artifactId>njams4-sdk-root</artifactId>
    <version>4.2.2-SNAPSHOT${changelist}</version>

    <packaging>pom</packaging>
    <name>njams4-sdk-root</name>
    <organization>
        <name>Faiz und Siegeln Software GmbH</name>
        <url>http://www.integrationmatters.com</url>
    </organization>
    <licenses>
        <license>
            <name>nJAMS SDK License</name>
            <url>https://github.com/IntegrationMatters/njams-sdk#license</url>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:https://github.com/IntegrationMatters/njams-sdk</connection>
        <developerConnection>scm:git:https://github.com/IntegrationMatters/njams-sdk</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <!-- Sane default when no revision property is passed in from the commandline -->
        <!--        <revision>0-SNAPSHOT</revision>-->
        <changelist></changelist>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPaths>
            ${project.basedir}/target/coverage-reports/jacoco-ut.exec,${project.basedir}/target/coverage-reports/jacoco-it.exec
        </sonar.jacoco.reportPaths>
        <sonar.language>java</sonar.language>

        <javaSourceLevel>1.8</javaSourceLevel>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <xmArguments>-Xms256m -Xmx512m</xmArguments>
        <argLine>${xmArguments}</argLine>
        <surefire.java.io.tmpdir>${project.build.directory}/tmp</surefire.java.io.tmpdir>

        <!-- Maven plugin versions -->
        <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
        <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
        <svn-revision-number-maven-plugin.version>1.13</svn-revision-number-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>

        <!-- Dependency versions -->
        <njams-messageformat.version>4.1.3</njams-messageformat.version>

        <aspectj.version>1.6.10</aspectj.version>
        <jms-api.version>1.1-rev-1</jms-api.version>
        <kafka-version>3.0.0</kafka-version>
        <activemq-version>5.16.3</activemq-version>
        <cloning.version>1.9.0</cloning.version>
        <objenesis.version>1.2</objenesis.version>
        <commons-lang.version>2.6</commons-lang.version>
        <jug.version>2.0.0</jug.version>
        <jaxb-api.version>2.3.1</jaxb-api.version>
        <jackson.version>2.13.2</jackson.version>
        <saxon.version>9.1.0.8</saxon.version>
        <slf4j.version>1.7.36</slf4j.version>
        <oshi.version>6.1.4</oshi.version>

        <!-- Older versions -->
        <!-- Resteasy client matches Wildfly 26.0.1 version -->
        <resteasy.version>4.7.4.Final</resteasy.version>
        <jmespath.version>0.2.0</jmespath.version>

        <!-- Test -->
        <junit.version>4.13.2</junit.version>
        <mockito.version>1.10.19</mockito.version>
        <tibcrypt.version>5.1.0</tibcrypt.version>
        <tibjms.version>5.1.0</tibjms.version>
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${javaSourceLevel}</source>
                        <target>${javaSourceLevel}</target>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.google.code.maven-svn-revision-number-plugin</groupId>
                    <artifactId>svn-revision-number-maven-plugin</artifactId>
                    <version>${svn-revision-number-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.tmatesoft.svnkit</groupId>
                            <artifactId>svnkit</artifactId>
                            <version>1.8.3-1</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4.2</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-provider-gitexe</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when integration tests are run. -->
                            <argLine>${failsafeArgLine}</argLine>
                            <!--
                                Skips integration tests if the value of skip.integration.tests property
                                is true
                            -->
                            <skipTests>${skip.integration.tests}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.faizsiegeln</groupId>
                <artifactId>njams-messageformat</artifactId>
                <version>${njams-messageformat.version}</version>
            </dependency>
            <dependency>
                <groupId>tibco</groupId>
                <artifactId>tibcrypt</artifactId>
                <version>${tibcrypt.version}</version>
            </dependency>
            <dependency>
                <groupId>tibco</groupId>
                <artifactId>tibjms</artifactId>
                <version>${tibjms.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.jms</groupId>
                <artifactId>jms-api</artifactId>
                <version>${jms-api.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.safehaus.jug</groupId>
                <artifactId>jug</artifactId>
                <version>${jug.version}</version>
                <classifier>asl</classifier>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jaxb-annotations</artifactId>
                <version>${jackson.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Latest version of SaxonB, see http://saxon.sourceforge.net/ -->
            <dependency>
                <groupId>net.sourceforge.saxon</groupId>
                <artifactId>saxon</artifactId>
                <version>${saxon.version}</version>
            </dependency>
            <dependency>
                <groupId>net.sourceforge.saxon</groupId>
                <artifactId>saxon</artifactId>
                <classifier>xpath</classifier>
                <version>${saxon.version}</version>
            </dependency>
            <dependency>
                <groupId>net.sourceforge.saxon</groupId>
                <artifactId>saxon</artifactId>
                <classifier>dom</classifier>
                <version>${saxon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-reload4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-jdk14</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi.version}</version>
            </dependency>
            <dependency>
                <groupId>io.burt</groupId>
                <artifactId>jmespath-jackson</artifactId>
                <version>${jmespath.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-client</artifactId>
                <version>${activemq-version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>sonar</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>
                        <configuration>
                            <excludes/>
                        </configuration>
                        <executions>
                            <!--
                                Prepares the property pointing to the JaCoCo runtime agent which
                                is passed as VM argument when Maven the Surefire plugin is executed.
                            -->
                            <execution>
                                <id>pre-unit-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                                    <!--
                                        Sets the name of the property containing the settings
                                        for JaCoCo runtime agent.
                                    -->
                                    <propertyName>surefire.argLine</propertyName>
                                </configuration>
                            </execution>
                            <!--
                                Ensures that the code coverage report for unit tests is created after
                                unit tests have been run.
                            -->
                            <execution>
                                <id>post-unit-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                    <!-- Sets the output directory for the code coverage report. -->
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                                </configuration>
                            </execution>
                            <!--
                                Prepares the property pointing to the JaCoCo runtime agent which
                                is passed as VM argument when Maven the Failsafe plugin is executed.
                            -->
                            <execution>
                                <id>pre-integration-test</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                                    <!--
                                        Sets the name of the property containing the settings
                                        for JaCoCo runtime agent.
                                    -->
                                    <propertyName>failsafeArgLine</propertyName>
                                </configuration>
                            </execution>
                            <!--
                                Ensures that the code coverage report for integration tests after
                                integration tests have been run.
                            -->
                            <execution>
                                <id>post-integration-test</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                                    <!-- Sets the output directory for the code coverage report. -->
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>svn-check</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.code.maven-svn-revision-number-plugin</groupId>
                        <artifactId>svn-revision-number-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <entries>
                                <entry>
                                    <path>${project.basedir}</path>
                                    <prefix>revisionNumberPlugin</prefix>
                                    <depth>infinity</depth>
                                    <reportUnversioned>false</reportUnversioned>
                                    <reportIgnored>false</reportIgnored>
                                    <reportOutOfDate>false</reportOutOfDate>
                                </entry>
                            </entries>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Internal Releases on Nexus</name>
            <url>http://vslnexus01:8081/repository/releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Nightly builds on Nexus</name>
            <url>http://vslnexus01:8081/repository/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <modules>
        <module>njams-sdk</module>
        <module>njams-sdk-sample-client</module>
        <module>njams-sdk-sample-app</module>
        <module>njams-sdk-communication-cloud</module>
    </modules>
</project>
